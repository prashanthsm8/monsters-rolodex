{"version":3,"sources":["logo.svg","components/card/Card.Component.jsx","components/card-list/Card-List.Component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Searchbox","placeHolderName","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredmonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,wBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHbC,EAAW,SAAAR,GACxB,OAAO,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLlBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAgBC,EAAnB,EAAmBA,aAAnB,OACrB,uBACCZ,UAAU,SACVa,KAAK,SACCC,YAAcH,EACdI,SAAUH,MC+BJI,E,kDAhCf,aAAe,IAAD,8BACZ,gBAYFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAc,IAJJ,E,qDAOd,WACC,IAAD,OACEI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC3EF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAAWmB,S,oBAMvC,WAEE,MAA8BC,KAAKN,MAA5Bd,EAAP,EAAOA,SAASW,EAAhB,EAAgBA,YACVU,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACzCA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAChD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACC,cAAC,EAAD,CAAWW,gBAAgB,eAAeC,aAAegB,KAAKhB,eAE/D,cAAC,EAAD,CAAUJ,SAAUqB,W,GA3BZI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d0f2f3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './Card.Component.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    \r\n)","import React from 'react';\r\nimport './Card-List.Component.css';\r\nimport {Card} from '../card/Card.Component'\r\n\r\nexport const CardList = props =>{\r\nreturn(<div className='card-list'>\r\n            {\r\n            props.monsters.map(monster=>\r\n            <Card key={monster.id} monster={monster}/>)\r\n            }\r\n    </div>);\r\n\r\n};\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const Searchbox = ({ placeHolderName,handleChange })=>(\r\n    <input\r\n     className='search'\r\n     type='search'\r\n           placeholder= {placeHolderName}\r\n           onChange={handleChange}\r\n         />\r\n);\r\n","import logo from './logo.svg';\nimport react, { Component } from 'react';\nimport './App.css';\nimport  {CardList} from './components/card-list/Card-List.Component'\nimport  {Searchbox} from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField : ''\n    }\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json())\n    .then(users=>this.setState({monsters : users}));\n  }\n\n  handleChange = (e) =>{\n    this.setState({searchField:e.target.value});\n  }\n    render()\n    {\n      const {monsters,searchField}= this.state;\n      const filteredmonsters = monsters.filter((monster)=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n      return (\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n           <Searchbox placeHolderName='monster-name' handleChange= {this.handleChange}\n            />\n          <CardList monsters={filteredmonsters}/>\n        </div>\n      );\n    }\n  }\n\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}